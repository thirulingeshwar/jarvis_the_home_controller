import speech_recognition as sr
import pyttsx3
import datetime
import wikipedia
import webbrowser
import os

# Initialize text-to-speech engine
engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)   

# Function to speak the given text
def speak(text):
    engine.say(text)
    engine.runAndWait()

# Function to greet the user
def greet():
    hour = datetime.datetime.now().hour
    if 0 <= hour < 12:
        speak("Good morning! sir")
    elif 12 <= hour < 18:
        speak("Good afternoon! sir")
    else:
        speak("Good evening! sir")
    speak(" I am Jarvis. How can I help you today? sir ")

# Function to convert speech to text
def listen():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)
    
    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"You said: {query}")
        return query
    except Exception as e:
        print("Sorry, I didn't catch that. Can you please repeat?")
        return None

# Function to process user commands
def process_command(command):
    if command is not None:
        if 'wikipedia' in command:
            speak('Searching Wikipedia...')
            query = command.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)
        elif 'open YouTube' in command:
            webbrowser.open("https://www.youtube.com")
        elif 'open Google' in command:
            webbrowser.open("https://www.google.com")
        elif 'play music' in command:
            music_dir = 'C:\\Path\\to\\your\\music\\directory'
            songs = os.listdir(music_dir)
            if len(songs) > 0:
                os.startfile(os.path.join(music_dir, songs[0]))
        else:
            speak("Sorry, I can't perform that task at the moment.")

# Main program loop
if __name__ == "__main__":
    greet()
    while True:
        command = listen()
        process_command(command)
